package utilities;

import java.io.File;
import java.net.URL;
import java.util.Properties;

/**
 * The enum {@link VisitorMessageNumber} defines error
 * messages generated by the visitor pattern.
 * 
 * @author Ben
 * @version 09/02/2018
 * @since 1.2
 */
public enum VisitorMessageNumber implements IMessageNumber {
    
    // ===========================================
    // R E S O L V E   I M P O R T S (100-199)
    // ===========================================
    
    RESOLVE_IMPORTS_100(100, ErrorSeverity.ERROR),
    RESOLVE_IMPORTS_101(101, ErrorSeverity.ERROR),
    RESOLVE_IMPORTS_102(102, ErrorSeverity.ERROR),
    RESOLVE_IMPORTS_103(103, ErrorSeverity.ERROR),
    RESOLVE_IMPORTS_104(104, ErrorSeverity.ERROR),
    RESOLVE_IMPORTS_105(105, ErrorSeverity.ERROR),
    RESOLVE_IMPORTS_106(106, ErrorSeverity.ERROR),

    // ===========================================
    // T O P   L E V E L   D E C L S (200-299)
    // ===========================================
    
    TOP_LEVEL_DECLS_200(200, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_201(201, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_202(202, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_203(203, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_204(204, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_205(205, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_206(206, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_207(207, ErrorSeverity.ERROR),
    TOP_LEVEL_DECLS_208(208, ErrorSeverity.ERROR),

    // ====================================================
    // R E S O L V E   N A M E   C H E C K E R (400-499)
    // ====================================================
    
    NAME_CHECKER_400(400, ErrorSeverity.ERROR),
    NAME_CHECKER_401(401, ErrorSeverity.ERROR),
    NAME_CHECKER_402(402, ErrorSeverity.ERROR),
    NAME_CHECKER_403(403, ErrorSeverity.ERROR),
    NAME_CHECKER_404(404, ErrorSeverity.ERROR),
    NAME_CHECKER_405(405, ErrorSeverity.ERROR),
    NAME_CHECKER_406(406, ErrorSeverity.ERROR),
    NAME_CHECKER_407(407, ErrorSeverity.ERROR),
    NAME_CHECKER_408(408, ErrorSeverity.ERROR),
    NAME_CHECKER_409(409, ErrorSeverity.ERROR),
    NAME_CHECKER_410(410, ErrorSeverity.ERROR),
    NAME_CHECKER_411(411, ErrorSeverity.ERROR),
    NAME_CHECKER_412(412, ErrorSeverity.ERROR),
    NAME_CHECKER_413(413, ErrorSeverity.ERROR),
    NAME_CHECKER_414(414, ErrorSeverity.ERROR),
    NAME_CHECKER_415(415, ErrorSeverity.ERROR),
    NAME_CHECKER_416(416, ErrorSeverity.ERROR),
    NAME_CHECKER_417(417, ErrorSeverity.ERROR),
    NAME_CHECKER_418(418, ErrorSeverity.ERROR),
    NAME_CHECKER_419(419, ErrorSeverity.ERROR),
    NAME_CHECKER_420(420, ErrorSeverity.ERROR),
    NAME_CHECKER_421(421, ErrorSeverity.ERROR),

    // ========================================================
    // A R R A Y   T Y P E   C O N S T R U C T O R (500-599)
    // ========================================================
    
    ARRAY_TYPE_CONSTRUCTOR_500(500, ErrorSeverity.ERROR),
    ARRAY_TYPE_CONSTRUCTOR_501(501, ErrorSeverity.ERROR),
    ARRAY_TYPE_CONSTRUCTOR_502(502, ErrorSeverity.ERROR),
    ARRAY_TYPE_CONSTRUCTOR_503(503, ErrorSeverity.ERROR),
    ARRAY_TYPE_CONSTRUCTOR_504(504, ErrorSeverity.ERROR),

    // ===========================================
    // T Y P E   R E S O L U T I O N (600-699)
    // ===========================================
    
    TYPE_RESOLUTION_600(600, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_601(601, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_602(602, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_603(603, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_604(604, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_605(605, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_606(606, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_607(607, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_608(608, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_609(609, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_610(610, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_611(611, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_612(612, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_613(613, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_614(614, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_615(615, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_616(616, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_617(617, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_618(618, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_619(619, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_620(620, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_621(621, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_622(622, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_623(623, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_624(624, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_625(625, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_626(626, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_627(627, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_628(628, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_629(629, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_630(630, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_631(631, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_632(632, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_633(633, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_634(634, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_635(635, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_636(636, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_637(637, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_638(638, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_639(639, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_640(640, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_641(641, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_642(642, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_643(643, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_644(644, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_645(645, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_646(646, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_647(647, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_648(648, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_649(649, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_650(650, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_651(651, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_652(652, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_653(653, ErrorSeverity.ERROR),
    TYPE_RESOLUTION_654(654, ErrorSeverity.ERROR),

    // ===========================================================
    // P A R A L L E L   U S A G E   C H E C K I N G (700-799)
    // ===========================================================
    
    PARALLEL_USAGE_CHECK_700(700, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_701(701, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_702(702, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_703(703, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_704(704, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_705(705, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_706(706, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_707(707, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_708(708, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_709(709, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_710(710, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_711(711, ErrorSeverity.WARNING),
    PARALLEL_USAGE_CHECK_712(712, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_713(713, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_714(714, ErrorSeverity.ERROR),
    PARALLEL_USAGE_CHECK_715(715, ErrorSeverity.WARNING)
    ;
    
    /**
     * File loader.
     */
    private static Properties localizable;
    
    /**
     * Local path.
     */
    private final static String PATH = "resources/properties/VisitorMessageNumber.properties";
    
    /**
     * The error number.
     */
    private final int number;
    
    /**
     * The severity level of the error message.
     */
    private ErrorSeverity type;
    
    private VisitorMessageNumber(int number, ErrorSeverity type) {
        this.number = number;
        this.type = type;
    }
    
    public int getNumber() {
        return number;
    }
    
    public ErrorSeverity getErrorSeverity() {
        return type;
    }
    
    @Override
    public String getMessage() {
        return localizable.getProperty(name());
    }
    
    static {
        URL url = PropertiesLoader.getURL(PATH);
        String path = PATH;
        if (url != null)
            path = url.getFile();
        localizable = PropertiesLoader.loadProperties(new File(path));
    }
}
