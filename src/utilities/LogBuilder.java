package utilities;

import java.util.ArrayList;
import java.util.List;

import org.stringtemplate.v4.ST;

/**
 * @author Ben Cisneros
 * @version 21/10/2018
 * @since 1.2
 */
public enum LogBuilder {
    
    INSTANCE
    ;
    
    /**
     * Number of errors messages generated by the compiler.
     */
    private int errorCount;
    
    /**
     * Number of warning messages generated by the compiler.
     */
    private int warningCount;
    
    /**
     * List of errors messages.
     */
    private List<PJErrorMessage> errorList;
    
    /**
     * List of warning messages.
     */
    private List<PJErrorMessage> warningList;
    
    /**
     * List of `about' messages.
     */
    private List<PJErrorMessage> infoList;
    
    LogBuilder() {
        errorCount = 0;
        warningCount = 0;
        errorList = new ArrayList<>();
        warningList = new ArrayList<>();
        infoList = new ArrayList<>();
    }
    
    public void addError(PJErrorMessage errorMsg) {
        IErrorGetter error = errorMsg.getError();
        switch (error.getErrorSeverity()) {
        case INFO:
            infoList.add(errorMsg);
            break;
        case WARNING:
            warningList.add(errorMsg);
            ++warningCount;
            break;
        case ERROR:
            errorList.add(errorMsg);
            ++errorCount;
            break;
        default:
            break;
        }
    }
    
    public void printContinue(PJErrorMessage errorMsg) {
        ST msg = errorMsg.getST();
        System.out.println(msg.render());
        addError(errorMsg);
    }
    
    public void dontPrintContinue(PJErrorMessage errorMsg) {
        addError(errorMsg);
    }
    
    public void printStop(PJErrorMessage errorMsg) {
        addError(errorMsg);
        ST msg = errorMsg.getST();
        System.out.println(msg.render());
        System.exit(0);
    }
    
    public int getErrorCount() {
        return errorCount;
    }
    
    public int getWarningCount() {
        return warningCount;
    }
    
    public List<PJErrorMessage> getTrace() {
        return errorList;
    }
    
    public List<PJErrorMessage> getWarnings() {
        return warningList;
    }
    
    public List<PJErrorMessage> getAllInfo() {
        return infoList;
    }
    
    public void reset() {
        errorCount = 0;
        warningCount = 0;
        errorList.clear();
        warningList.clear();
        infoList.clear();
    }
}
