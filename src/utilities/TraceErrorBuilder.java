package utilities;

import java.util.ArrayList;
import java.util.List;

/**
 * @author Ben Cisneros
 * @version 21/10/2018
 * @since 1.2
 */
public enum TraceErrorBuilder {
    
    INSTANCE
    ;
    
    /**
     * Number of errors messages generated by the compiler.
     */
    private int errorCount;
    
    /**
     * List of errors messages.
     */
    private List<BaseErrorMessage> trace;
    
    TraceErrorBuilder() {
        errorCount = 0;
        trace = new ArrayList<>();
    }
    
    public void dump(BaseErrorMessage errorMsg) {
        dump(null, errorMsg);
    }
    
    public void dump(ErrorSeverity errorServerity, BaseErrorMessage errorMsg) {
        if (errorServerity == null)
            errorServerity = errorMsg.getErrorMessage().getErrorSeverity();
        
        switch (errorServerity) {
        case INFO:
            // Dump messages but don't terminate execution of program
            break;
        case WARNING:
            // Don't dump message right away, just continue
            break;
        case FATAL:
        case ERROR:
            // Terminate and dump trace
            ++errorCount;
            break;
        }
        trace.add(errorMsg);
    }
    
    public int getErrorCount() {
        return errorCount;
    }
    
    public List<BaseErrorMessage> getTrace() {
        return trace;
    }
}
