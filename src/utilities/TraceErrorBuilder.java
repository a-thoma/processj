package utilities;

import java.util.ArrayList;
import java.util.List;

/**
 * @author Ben Cisneros
 * @version 21/10/2018
 * @since 1.2
 */
public enum TraceErrorBuilder {
    
    INSTANCE
    ;
    
    /**
     * Number of errors messages generated by the compiler.
     */
    private int errorCount;
    
    /**
     * Number of warning messages generated by the compiler.
     */
    private int warningCount;
    
    /**
     * List of errors messages.
     */
    private List<PJErrorMessage> traceList;
    
    /**
     * List of warning messages.
     */
    private List<PJErrorMessage> warningList;
    
    /**
     * List of info messages.
     */
    private List<PJErrorMessage> infoList;
    
    TraceErrorBuilder() {
        errorCount = 0;
        warningCount = 0;
        traceList = new ArrayList<>();
        warningList = new ArrayList<>();
        infoList = new ArrayList<>();
    }
    
    public void dump(PJErrorMessage errorMsg) {
        dump(null, errorMsg);
    }
    
    public void dump(ErrorSeverity errorServerity, PJErrorMessage errorMsg) {
        if (errorServerity == null)
            errorServerity = errorMsg.getErrorMessage().getErrorSeverity();
        
        switch (errorServerity) {
        case INFO:
            // Dump messages but don't terminate execution of program
            infoList.add(errorMsg);
            break;
        case WARNING:
            // Don't dump message right away, just continue
            warningList.add(errorMsg);
            ++warningCount;
            break;
        case ERROR:
            // Terminate and dump trace
            traceList.add(errorMsg);
            ++errorCount;
            break;
        }
    }
    
    public void continuePrintDontStop(ErrorSeverity errorServerity, PJErrorMessage errorMsg) {
        //
    }
    
    public void continueDontPrintDontStop(ErrorSeverity errorServerity, PJErrorMessage errorMsg) {
        //
    }
    
    public void printAndStop(ErrorSeverity errorServerity, PJErrorMessage errorMsg) {
        //
    }
    
    public int getErrorCount() {
        return errorCount;
    }
    
    public int getWarningCount() {
        return warningCount;
    }
    
    public List<PJErrorMessage> getTrace() {
        return traceList;
    }
    
    public List<PJErrorMessage> getWarnings() {
        return warningList;
    }
    
    public List<PJErrorMessage> getAllInfo() {
        return infoList;
    }
    
    public void reset() {
        errorCount = 0;
        warningCount = 0;
        traceList.clear();
        warningList.clear();
        infoList.clear();
    }
}
