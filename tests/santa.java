import java.util.*;
import processj.runtime.*;
import std.*;


/**
 * File generated by the ProcessJ JVM Compiler.
 * Package name 'tests'.
 * Code generation for 'santa.pj'.
 * Target class 'santa'.
 * Java code version '1.8.0_66'.
 *
 * @author ProcessJ Group - University of Nevada, Las Vegas
 * @since 1.2
 *
 */
public class santa {
    // Temporary dirty fix for unreachable code due to infinite loop
    public static boolean isTrue() { return true; }

    public static final int N_REINDEER = 3;

    public static final int G_REINDEER = N_REINDEER;

    public static final int N_ELVES = 4;

    public static final int G_ELVES = 3;

    public static final int HOLIDAY_TIME = 100000;

    public static final int WORKING_TIME = 200000;

    public static final int DELIVERY_TIME = 100000;

    public static final int CONSULTATION_TIME = 200000;

    protected static class Reindeer_msg {
        protected static class holiday extends PJProtocolCase {
            public int id;

            public holiday(int id) {
                this.id = id;
                this.tag = "holiday";
            }
        }

        protected static class deer_ready extends PJProtocolCase {
            public int id;

            public deer_ready(int id) {
                this.id = id;
                this.tag = "deer_ready";
            }
        }

        protected static class deliver extends PJProtocolCase {
            public int id;

            public deliver(int id) {
                this.id = id;
                this.tag = "deliver";
            }
        }

        protected static class deer_done extends PJProtocolCase {
            public int id;

            public deer_done(int id) {
                this.id = id;
                this.tag = "deer_done";
            }
        }
    }

    protected static class Elf_msg {
        protected static class working extends PJProtocolCase {
            public int id;

            public working(int id) {
                this.id = id;
                this.tag = "working";
            }
        }

        protected static class elf_ready extends PJProtocolCase {
            public int id;

            public elf_ready(int id) {
                this.id = id;
                this.tag = "elf_ready";
            }
        }

        protected static class waiting extends PJProtocolCase {
            public int id;

            public waiting(int id) {
                this.id = id;
                this.tag = "waiting";
            }
        }

        protected static class consult extends PJProtocolCase {
            public int id;

            public consult(int id) {
                this.id = id;
                this.tag = "consult";
            }
        }

        protected static class elf_done extends PJProtocolCase {
            public int id;

            public elf_done(int id) {
                this.id = id;
                this.tag = "elf_done";
            }
        }
    }

    protected static class Santa_msg {
        protected static class reindeer_ready extends PJProtocolCase {
            public reindeer_ready() {
                this.tag = "reindeer_ready";
            }
        }

        protected static class harness extends PJProtocolCase {
            public int id;

            public harness(int id) {
                this.id = id;
                this.tag = "harness";
            }
        }

        protected static class mush_mush extends PJProtocolCase {
            public mush_mush() {
                this.tag = "mush_mush";
            }
        }

        protected static class woah extends PJProtocolCase {
            public woah() {
                this.tag = "woah";
            }
        }

        protected static class unharness extends PJProtocolCase {
            public int id;

            public unharness(int id) {
                this.id = id;
                this.tag = "unharness";
            }
        }

        protected static class elves_ready extends PJProtocolCase {
            public elves_ready() {
                this.tag = "elves_ready";
            }
        }

        protected static class greet extends PJProtocolCase {
            public int id;

            public greet(int id) {
                this.id = id;
                this.tag = "greet";
            }
        }

        protected static class consulting extends PJProtocolCase {
            public consulting() {
                this.tag = "consulting";
            }
        }

        protected static class santa_done extends PJProtocolCase {
            public santa_done() {
                this.tag = "santa_done";
            }
        }

        protected static class goodbye extends PJProtocolCase {
            public int id;

            public goodbye(int id) {
                this.id = id;
                this.tag = "goodbye";
            }
        }
    }

    protected static class Message {
    }

    public static class _proc$random_wait1144780 extends PJProcess {
        protected long _pd$max_wait1;
        protected long _pd$seed2;

        protected PJTimer _ld$t1;
        protected long _ld$wait2;

        public _proc$random_wait1144780(long _pd$max_wait1, long _pd$seed2) {
            this._pd$max_wait1 = _pd$max_wait1;
            this._pd$seed2 = _pd$seed2;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            random.initRandom(_pd$seed2);
            _ld$wait2 = random.longRandom();;
            _ld$wait2 = _ld$wait2 % 250;
            _ld$t1 = new PJTimer(this, _ld$wait2);
            try {
                _ld$t1.start();
                setNotReady();
                this.runLabel = 1;
                yield();
            } catch (InterruptedException e) {
                System.out.println("An Interrupted exception occurred for a timer!");
            }
            label(1);
            terminate();
        }
    }

    public static class _proc$display$502908242 extends PJProcess {
        protected PJChannel<PJProtocolCase> _pd$in1;

        protected PJProtocolCase _ld$msg1;

        public _proc$display$502908242(PJChannel<PJProtocolCase> _pd$in1) {
            this._pd$in1 = _pd$in1;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                default: break;
            }

            while (isTrue()) {
                if (!_pd$in1.isReadyToRead(this)) {
                    this.runLabel = 1;
                    yield();
                }

                label(1);
                _ld$msg1 = _pd$in1.read(this);
                this.runLabel = 2;
                yield();

                label(2);
                switch(_ld$msg1.tag) {
                case "holiday":
                    io.println("                                   Reindeer-" + (((Reindeer_msg.holiday) _ld$msg1).id) + ": on holiday ... wish you were here");
                    break;
                case "deer_ready":
                    io.println("                                   Reindeer-" + (((Reindeer_msg.deer_ready) _ld$msg1).id) + ": back from holiday ... ready for work");
                    break;
                case "deliver":
                    io.println("                                   Reindeer-" + (((Reindeer_msg.deliver) _ld$msg1).id) + ": delivering toys ... la-di-da-di-da-di-da");
                    break;
                case "deer_done":
                    io.println("                                   Reindeer-" + (((Reindeer_msg.deer_done) _ld$msg1).id) + ": all toys delivered ... want a holiday");
                    break;
                case "working":
                    io.println("                   Elf-" + (((Elf_msg.working) _ld$msg1).id) + ": working");
                    break;
                case "elf_ready":
                    io.println("                   Elf-" + (((Elf_msg.elf_ready) _ld$msg1).id) + ": need to consult Santa");
                    break;
                case "waiting":
                    io.println("                   Elf-" + (((Elf_msg.waiting) _ld$msg1).id) + ": in the waiting room...");
                    break;
                case "consult":
                    io.println("                   Elf-" + (((Elf_msg.consult) _ld$msg1).id) + ": about these toys...??");
                    break;
                case "elf_done":
                    io.println("                   Elf-" + (((Elf_msg.elf_done) _ld$msg1).id) + ": OK ... we'll built it, bye...");
                    break;
                case "reindeer_ready":
                    io.println("Santa: Ho-ho-ho ... the reindeer are back!");
                    break;
                case "harness":
                    io.println("Santa: harnessing reindeer: " + (((Santa_msg.harness) _ld$msg1).id));
                    break;
                case "mush_mush":
                    io.println("Santa: mush mush...");
                    break;
                case "woah":
                    io.println("Santa: woah... we're back home!");
                    break;
                case "unharness":
                    io.println("Santa: un-harnessing reindeer: " + (((Santa_msg.unharness) _ld$msg1).id));
                    break;
                case "elves_ready":
                    io.println("Santa: Ho-ho-ho... some elves are here!");
                    break;
                case "greet":
                    io.println("Santa: hello elf: " + (((Santa_msg.greet) _ld$msg1).id));
                    break;
                case "consulting":
                    io.println("Santa: consulting with elves...");
                    break;
                case "santa_done":
                    io.println("Santa: OK, all done -- thanks!");
                    break;
                case "goodbye":
                    io.println("Santa: goodbye elf: " + (((Santa_msg.goodbye) _ld$msg1).id));
                    break;
                }
            }
            terminate();
        }
    }

    public static class _proc$p_barrier_knock822005941 extends PJProcess {
        protected int _pd$n1;
        protected PJChannel<Boolean> _pd$a2;
        protected PJChannel<Boolean> _pd$b3;
        protected PJChannel<Boolean> _pd$knock4;

        protected int _ld$i1;
        protected boolean _ld$any2;
        protected int _ld$i3;
        protected boolean _ld$any4;

        public _proc$p_barrier_knock822005941(int _pd$n1, PJChannel<Boolean> _pd$a2, PJChannel<Boolean> _pd$b3, PJChannel<Boolean> _pd$knock4) {
            this._pd$n1 = _pd$n1;
            this._pd$a2 = _pd$a2;
            this._pd$b3 = _pd$b3;
            this._pd$knock4 = _pd$knock4;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                case 4: resume(4); break;
                case 5: resume(5); break;
                default: break;
            }

            while (isTrue()) {
                for (_ld$i1 = 0;
                     _ld$i1 < _pd$n1;
                     _ld$i1++) {

                     if (!_pd$a2.isReadyToRead(this)) {
                         this.runLabel = 1;
                         yield();
                     }

                     label(1);
                     _ld$any2 = _pd$a2.read(this);
                     this.runLabel = 2;
                     yield();

                     label(2);
                }
                _pd$knock4.write(this, true);
                this.runLabel = 3;
                yield();
                label(3);

                for (_ld$i3 = 0;
                     _ld$i3 < _pd$n1;
                     _ld$i3++) {

                     if (!_pd$b3.isReadyToRead(this)) {
                         this.runLabel = 4;
                         yield();
                     }

                     label(4);
                     _ld$any4 = _pd$b3.read(this);
                     this.runLabel = 5;
                     yield();

                     label(5);
                }
            }
            terminate();
        }
    }

    public static class _proc$p_barrier2048483955 extends PJProcess {
        protected int _pd$n1;
        protected PJChannel<Boolean> _pd$a2;
        protected PJChannel<Boolean> _pd$b3;

        protected int _ld$i1;
        protected boolean _ld$any2;
        protected int _ld$i3;
        protected boolean _ld$any4;

        public _proc$p_barrier2048483955(int _pd$n1, PJChannel<Boolean> _pd$a2, PJChannel<Boolean> _pd$b3) {
            this._pd$n1 = _pd$n1;
            this._pd$a2 = _pd$a2;
            this._pd$b3 = _pd$b3;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                case 4: resume(4); break;
                default: break;
            }

            while (isTrue()) {
                for (_ld$i1 = 0;
                     _ld$i1 < _pd$n1;
                     _ld$i1++) {

                     if (!_pd$a2.isReadyToRead(this)) {
                         this.runLabel = 1;
                         yield();
                     }

                     label(1);
                     _ld$any2 = _pd$a2.read(this);
                     this.runLabel = 2;
                     yield();

                     label(2);
                }
                for (_ld$i3 = 0;
                     _ld$i3 < _pd$n1;
                     _ld$i3++) {

                     if (!_pd$b3.isReadyToRead(this)) {
                         this.runLabel = 3;
                         yield();
                     }

                     label(3);
                     _ld$any4 = _pd$b3.read(this);
                     this.runLabel = 4;
                     yield();

                     label(4);
                }
            }
            terminate();
        }
    }

    public static class _proc$syncronize$523628924 extends PJProcess {
        protected PJChannel<Boolean> _pd$a1;
        protected PJChannel<Boolean> _pd$b2;

        public _proc$syncronize$523628924(PJChannel<Boolean> _pd$a1, PJChannel<Boolean> _pd$b2) {
            this._pd$a1 = _pd$a1;
            this._pd$b2 = _pd$b2;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                case 4: resume(4); break;
                default: break;
            }

            if (!_pd$a1.claimWrite(this)) {
                this.runLabel = 1;
                yield();
            }
            label(1);

            _pd$a1.write(this, true);
            this.runLabel = 2;

            yield();
            label(2);

            _pd$a1.unclaimWrite();

            if (!_pd$b2.claimWrite(this)) {
                this.runLabel = 3;
                yield();
            }
            label(3);

            _pd$b2.write(this, true);
            this.runLabel = 4;

            yield();
            label(4);

            _pd$b2.unclaimWrite();

            terminate();
        }
    }

    public static class _proc$reindeer$646748748 extends PJProcess {
        protected int _pd$id1;
        protected long _pd$seed2;
        protected PJBarrier _pd$just_reindeer3;
        protected PJBarrier _pd$santa_reindeer4;
        protected PJChannel<Integer> _pd$to_santa5;
        protected PJChannel<PJProtocolCase> _pd$report6;

        protected long _ld$my_seed1;
        protected long _ld$wait2;
        protected long _ld$t3;
        protected PJTimer _ld$tim4;

        public _proc$reindeer$646748748(int _pd$id1, long _pd$seed2, PJBarrier _pd$just_reindeer3, PJBarrier _pd$santa_reindeer4, PJChannel<Integer> _pd$to_santa5, PJChannel<PJProtocolCase> _pd$report6) {
            this._pd$id1 = _pd$id1;
            this._pd$seed2 = _pd$seed2;
            this._pd$just_reindeer3 = _pd$just_reindeer3;
            this._pd$santa_reindeer4 = _pd$santa_reindeer4;
            this._pd$to_santa5 = _pd$to_santa5;
            this._pd$report6 = _pd$report6;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                case 4: resume(4); break;
                case 5: resume(5); break;
                case 6: resume(6); break;
                case 7: resume(7); break;
                case 8: resume(8); break;
                case 9: resume(9); break;
                case 10: resume(10); break;
                case 11: resume(11); break;
                case 12: resume(12); break;
                case 13: resume(13); break;
                case 14: resume(14); break;
                case 15: resume(15); break;
                case 16: resume(16); break;
                default: break;
            }

            _ld$my_seed1 = _pd$seed2;
            _ld$wait2 = HOLIDAY_TIME;


            while (isTrue()) {
                if (!_pd$report6.claimWrite(this)) {
                    this.runLabel = 1;
                    yield();
                }
                label(1);

                _pd$report6.write(this, ((PJProtocolCase) (new Reindeer_msg.holiday(_pd$id1))));
                this.runLabel = 2;

                yield();
                label(2);

                _pd$report6.unclaimWrite();

                final PJPar _ld$par1 = new PJPar(1, this);

                (new santa._proc$random_wait1144780(_ld$wait2, _ld$my_seed1) {
                    @Override
                    public void finalize() {
                        _ld$par1.decrement();
                    }
                }).schedule();

                if (_ld$par1.shouldYield()) {
                    this.runLabel = 3;
                    yield();
                    label(3);
                }

                if (!_pd$report6.claimWrite(this)) {
                    this.runLabel = 4;
                    yield();
                }
                label(4);

                _pd$report6.write(this, ((PJProtocolCase) (new Reindeer_msg.deer_ready(_pd$id1))));
                this.runLabel = 5;

                yield();
                label(5);

                _pd$report6.unclaimWrite();

                _pd$just_reindeer3.sync(this);
                this.runLabel = 6;
                yield();
                label(6);
                if (!_pd$to_santa5.claimWrite(this)) {
                    this.runLabel = 7;
                    yield();
                }
                label(7);

                _pd$to_santa5.write(this, _pd$id1);
                this.runLabel = 8;

                yield();
                label(8);

                _pd$to_santa5.unclaimWrite();

                _pd$santa_reindeer4.sync(this);
                this.runLabel = 9;
                yield();
                label(9);
                if (!_pd$report6.claimWrite(this)) {
                    this.runLabel = 10;
                    yield();
                }
                label(10);

                _pd$report6.write(this, ((PJProtocolCase) (new Reindeer_msg.deliver(_pd$id1))));
                this.runLabel = 11;

                yield();
                label(11);

                _pd$report6.unclaimWrite();

                _pd$santa_reindeer4.sync(this);
                this.runLabel = 12;
                yield();
                label(12);
                if (!_pd$report6.claimWrite(this)) {
                    this.runLabel = 13;
                    yield();
                }
                label(13);

                _pd$report6.write(this, ((PJProtocolCase) (new Reindeer_msg.deer_done(_pd$id1))));
                this.runLabel = 14;

                yield();
                label(14);

                _pd$report6.unclaimWrite();

                if (!_pd$to_santa5.claimWrite(this)) {
                    this.runLabel = 15;
                    yield();
                }
                label(15);

                _pd$to_santa5.write(this, _pd$id1);
                this.runLabel = 16;

                yield();
                label(16);

                _pd$to_santa5.unclaimWrite();

            }
            terminate();
        }
    }

    public static class _proc$elf$1975405111 extends PJProcess {
        protected int _pd$id1;
        protected long _pd$seed2;
        protected PJChannel<Boolean> _pd$elves_a3;
        protected PJChannel<Boolean> _pd$elves_b4;
        protected PJChannel<Boolean> _pd$santa_elves_a5;
        protected PJChannel<Boolean> _pd$santa_elves_b6;
        protected PJChannel<Integer> _pd$to_santa7;
        protected PJChannel<PJProtocolCase> _pd$report8;

        protected long _ld$my_seed1;
        protected long _ld$wait2;

        public _proc$elf$1975405111(int _pd$id1, long _pd$seed2, PJChannel<Boolean> _pd$elves_a3, PJChannel<Boolean> _pd$elves_b4, PJChannel<Boolean> _pd$santa_elves_a5, PJChannel<Boolean> _pd$santa_elves_b6, PJChannel<Integer> _pd$to_santa7, PJChannel<PJProtocolCase> _pd$report8) {
            this._pd$id1 = _pd$id1;
            this._pd$seed2 = _pd$seed2;
            this._pd$elves_a3 = _pd$elves_a3;
            this._pd$elves_b4 = _pd$elves_b4;
            this._pd$santa_elves_a5 = _pd$santa_elves_a5;
            this._pd$santa_elves_b6 = _pd$santa_elves_b6;
            this._pd$to_santa7 = _pd$to_santa7;
            this._pd$report8 = _pd$report8;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                case 4: resume(4); break;
                case 5: resume(5); break;
                case 6: resume(6); break;
                case 7: resume(7); break;
                case 8: resume(8); break;
                case 9: resume(9); break;
                case 10: resume(10); break;
                case 11: resume(11); break;
                case 12: resume(12); break;
                case 13: resume(13); break;
                case 14: resume(14); break;
                case 15: resume(15); break;
                case 16: resume(16); break;
                default: break;
            }

            _ld$my_seed1 = _pd$seed2;
            _ld$wait2 = WORKING_TIME;
            while (isTrue()) {
                if (!_pd$report8.claimWrite(this)) {
                    this.runLabel = 1;
                    yield();
                }
                label(1);

                _pd$report8.write(this, ((PJProtocolCase) (new Elf_msg.working(_pd$id1))));
                this.runLabel = 2;

                yield();
                label(2);

                _pd$report8.unclaimWrite();

                final PJPar _ld$par1 = new PJPar(1, this);

                (new santa._proc$random_wait1144780(_ld$wait2, _ld$my_seed1) {
                    @Override
                    public void finalize() {
                        _ld$par1.decrement();
                    }
                }).schedule();

                if (_ld$par1.shouldYield()) {
                    this.runLabel = 3;
                    yield();
                    label(3);
                }

                if (!_pd$report8.claimWrite(this)) {
                    this.runLabel = 4;
                    yield();
                }
                label(4);

                _pd$report8.write(this, ((PJProtocolCase) (new Elf_msg.elf_ready(_pd$id1))));
                this.runLabel = 5;

                yield();
                label(5);

                _pd$report8.unclaimWrite();

                final PJPar _ld$par2 = new PJPar(1, this);

                (new santa._proc$syncronize$523628924(_pd$elves_a3, _pd$elves_b4) {
                    @Override
                    public void finalize() {
                        _ld$par2.decrement();
                    }
                }).schedule();

                if (_ld$par2.shouldYield()) {
                    this.runLabel = 6;
                    yield();
                    label(6);
                }

                if (!_pd$to_santa7.claimWrite(this)) {
                    this.runLabel = 7;
                    yield();
                }
                label(7);

                _pd$to_santa7.write(this, _pd$id1);
                this.runLabel = 8;

                yield();
                label(8);

                _pd$to_santa7.unclaimWrite();

                final PJPar _ld$par3 = new PJPar(1, this);

                (new santa._proc$syncronize$523628924(_pd$santa_elves_a5, _pd$santa_elves_b6) {
                    @Override
                    public void finalize() {
                        _ld$par3.decrement();
                    }
                }).schedule();

                if (_ld$par3.shouldYield()) {
                    this.runLabel = 9;
                    yield();
                    label(9);
                }

                if (!_pd$report8.claimWrite(this)) {
                    this.runLabel = 10;
                    yield();
                }
                label(10);

                _pd$report8.write(this, ((PJProtocolCase) (new Elf_msg.consult(_pd$id1))));
                this.runLabel = 11;

                yield();
                label(11);

                _pd$report8.unclaimWrite();

                final PJPar _ld$par4 = new PJPar(1, this);

                (new santa._proc$syncronize$523628924(_pd$santa_elves_a5, _pd$santa_elves_b6) {
                    @Override
                    public void finalize() {
                        _ld$par4.decrement();
                    }
                }).schedule();

                if (_ld$par4.shouldYield()) {
                    this.runLabel = 12;
                    yield();
                    label(12);
                }

                if (!_pd$report8.claimWrite(this)) {
                    this.runLabel = 13;
                    yield();
                }
                label(13);

                _pd$report8.write(this, ((PJProtocolCase) (new Elf_msg.elf_done(_pd$id1))));
                this.runLabel = 14;

                yield();
                label(14);

                _pd$report8.unclaimWrite();

                if (!_pd$to_santa7.claimWrite(this)) {
                    this.runLabel = 15;
                    yield();
                }
                label(15);

                _pd$to_santa7.write(this, _pd$id1);
                this.runLabel = 16;

                yield();
                label(16);

                _pd$to_santa7.unclaimWrite();

            }
            terminate();
        }
    }

    public static class _proc$santa$1316171216 extends PJProcess {
        protected long _pd$seed1;
        protected PJChannel<Boolean> _pd$knock2;
        protected PJChannel<Integer> _pd$from_reindeer3;
        protected PJChannel<Integer> _pd$from_elf4;
        protected PJBarrier _pd$santa_reindeer5;
        protected PJChannel<Boolean> _pd$santa_elves_a6;
        protected PJChannel<Boolean> _pd$santa_elves_b7;
        protected PJChannel<PJProtocolCase> _pd$report8;

        protected long _ld$my_seed1;
        protected PJTimer _ld$tim2;
        protected long _ld$t3;
        protected long _ld$wait4;
        protected int _ld$id5;
        protected boolean _ld$answer6;
        protected int _ld$i7;
        protected int _ld$i8;
        protected int _ld$i9;
        protected int _ld$i10;
        protected int _ld$index11;
        protected PJAlt _ld$alt12;

        public _proc$santa$1316171216(long _pd$seed1, PJChannel<Boolean> _pd$knock2, PJChannel<Integer> _pd$from_reindeer3, PJChannel<Integer> _pd$from_elf4, PJBarrier _pd$santa_reindeer5, PJChannel<Boolean> _pd$santa_elves_a6, PJChannel<Boolean> _pd$santa_elves_b7, PJChannel<PJProtocolCase> _pd$report8) {
            this._pd$seed1 = _pd$seed1;
            this._pd$knock2 = _pd$knock2;
            this._pd$from_reindeer3 = _pd$from_reindeer3;
            this._pd$from_elf4 = _pd$from_elf4;
            this._pd$santa_reindeer5 = _pd$santa_reindeer5;
            this._pd$santa_elves_a6 = _pd$santa_elves_a6;
            this._pd$santa_elves_b7 = _pd$santa_elves_b7;
            this._pd$report8 = _pd$report8;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                case 4: resume(4); break;
                case 5: resume(5); break;
                case 6: resume(6); break;
                case 7: resume(7); break;
                case 8: resume(8); break;
                case 9: resume(9); break;
                case 10: resume(10); break;
                case 11: resume(11); break;
                case 12: resume(12); break;
                case 13: resume(13); break;
                case 14: resume(14); break;
                case 15: resume(15); break;
                case 16: resume(16); break;
                case 17: resume(17); break;
                case 18: resume(18); break;
                case 19: resume(19); break;
                case 20: resume(20); break;
                case 21: resume(21); break;
                case 22: resume(22); break;
                case 23: resume(23); break;
                case 24: resume(24); break;
                case 25: resume(25); break;
                case 26: resume(26); break;
                case 27: resume(27); break;
                case 28: resume(28); break;
                case 29: resume(29); break;
                case 30: resume(30); break;
                case 31: resume(31); break;
                case 32: resume(32); break;
                case 33: resume(33); break;
                case 34: resume(34); break;
                case 35: resume(35); break;
                case 36: resume(36); break;
                case 37: resume(37); break;
                case 38: resume(38); break;
                case 39: resume(39); break;
                case 40: resume(40); break;
                case 41: resume(41); break;
                default: break;
            }

            _ld$my_seed1 = _pd$seed1;



            while (isTrue()) {
                _ld$alt12 = new PJAlt(2, this);
                boolean[] booleanGuards = { true, true };
                Object[] objectGuards = { _pd$from_reindeer3, _pd$knock2 };
                boolean ready = _ld$alt12.setGuards(booleanGuards, objectGuards);

                if (!ready) {
                    System.out.println("RuntimeError: One of the boolean pre-guards must be true!");
                    System.exit(1);
                }

                this.setNotReady();
                _ld$index11 = _ld$alt12.enable();
                this.runLabel = 41;
                yield();

                label(41);
                int selected = _ld$alt12.disable(_ld$index11);

                switch(selected) {
                    case 0:
                        if (!_pd$from_reindeer3.isReadyToRead(this)) {
                            this.runLabel = 20;
                            yield();
                        }

                        label(20);
                        _ld$id5 = _pd$from_reindeer3.read(this);
                        this.runLabel = 21;
                        yield();

                        label(21);
                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 1;
                            yield();
                        }
                        label(1);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.reindeer_ready())));
                        this.runLabel = 2;

                        yield();
                        label(2);

                        _pd$report8.unclaimWrite();

                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 3;
                            yield();
                        }
                        label(3);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.harness(_ld$id5))));
                        this.runLabel = 4;

                        yield();
                        label(4);

                        _pd$report8.unclaimWrite();

                        for (_ld$i7 = 0;
                             _ld$i7 < G_REINDEER - 1;
                             _ld$i7++) {

                             if (!_pd$from_reindeer3.isReadyToRead(this)) {
                                 this.runLabel = 5;
                                 yield();
                             }

                             label(5);
                             _ld$id5 = _pd$from_reindeer3.read(this);
                             this.runLabel = 6;
                             yield();

                             label(6);
                             if (!_pd$report8.claimWrite(this)) {
                                 this.runLabel = 7;
                                 yield();
                             }
                             label(7);

                             _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.harness(_ld$id5))));
                             this.runLabel = 8;

                             yield();
                             label(8);

                             _pd$report8.unclaimWrite();

                        }
                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 9;
                            yield();
                        }
                        label(9);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.mush_mush())));
                        this.runLabel = 10;

                        yield();
                        label(10);

                        _pd$report8.unclaimWrite();

                        _pd$santa_reindeer5.sync(this);
                        this.runLabel = 11;
                        yield();
                        label(11);
                        _ld$t3 = PJTimer.read();
                        _ld$tim2 = new PJTimer(this, 100);
                        try {
                            _ld$tim2.start();
                            setNotReady();
                            this.runLabel = 12;
                            yield();
                        } catch (InterruptedException e) {
                            System.out.println("An Interrupted exception occurred for a timer!");
                        }
                        label(12);
                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 13;
                            yield();
                        }
                        label(13);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.woah())));
                        this.runLabel = 14;

                        yield();
                        label(14);

                        _pd$report8.unclaimWrite();

                        _pd$santa_reindeer5.sync(this);
                        this.runLabel = 15;
                        yield();
                        label(15);
                        for (_ld$i8 = 0;
                             _ld$i8 < G_REINDEER;
                             _ld$i8++) {

                             if (!_pd$from_reindeer3.isReadyToRead(this)) {
                                 this.runLabel = 18;
                                 yield();
                             }

                             label(18);
                              // Do we have a rendezvous?
                             _ld$id5 = _pd$from_reindeer3.preReadRendezvous(this);
                             if (!_pd$report8.claimWrite(this)) {
                                 this.runLabel = 16;
                                 yield();
                             }
                             label(16);

                             _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.unharness(_ld$id5))));
                             this.runLabel = 17;

                             yield();
                             label(17);

                             _pd$report8.unclaimWrite();

                             _pd$from_reindeer3.postReadRendezvous(this);
                             this.runLabel = 19;
                             yield();

                             label(19);
                        }
                        break;
                    case 1:
                        if (!_pd$knock2.isReadyToRead(this)) {
                            this.runLabel = 39;
                            yield();
                        }

                        label(39);
                        _ld$answer6 = _pd$knock2.read(this);
                        this.runLabel = 40;
                        yield();

                        label(40);
                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 22;
                            yield();
                        }
                        label(22);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.elves_ready())));
                        this.runLabel = 23;

                        yield();
                        label(23);

                        _pd$report8.unclaimWrite();

                        for (_ld$i9 = 0;
                             _ld$i9 < G_ELVES;
                             _ld$i9++) {

                             if (!_pd$from_elf4.isReadyToRead(this)) {
                                 this.runLabel = 24;
                                 yield();
                             }

                             label(24);
                             _ld$id5 = _pd$from_elf4.read(this);
                             this.runLabel = 25;
                             yield();

                             label(25);
                             if (!_pd$report8.claimWrite(this)) {
                                 this.runLabel = 26;
                                 yield();
                             }
                             label(26);

                             _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.greet(_ld$id5))));
                             this.runLabel = 27;

                             yield();
                             label(27);

                             _pd$report8.unclaimWrite();

                        }
                        final PJPar _ld$par1 = new PJPar(1, this);

                        (new santa._proc$syncronize$523628924(_pd$santa_elves_a6, _pd$santa_elves_b7) {
                            @Override
                            public void finalize() {
                                _ld$par1.decrement();
                            }
                        }).schedule();

                        if (_ld$par1.shouldYield()) {
                            this.runLabel = 28;
                            yield();
                            label(28);
                        }

                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 29;
                            yield();
                        }
                        label(29);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.consulting())));
                        this.runLabel = 30;

                        yield();
                        label(30);

                        _pd$report8.unclaimWrite();

                        _ld$t3 = PJTimer.read();
                        _ld$tim2 = new PJTimer(this, 100);
                        try {
                            _ld$tim2.start();
                            setNotReady();
                            this.runLabel = 31;
                            yield();
                        } catch (InterruptedException e) {
                            System.out.println("An Interrupted exception occurred for a timer!");
                        }
                        label(31);
                        if (!_pd$report8.claimWrite(this)) {
                            this.runLabel = 32;
                            yield();
                        }
                        label(32);

                        _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.santa_done())));
                        this.runLabel = 33;

                        yield();
                        label(33);

                        _pd$report8.unclaimWrite();

                        final PJPar _ld$par2 = new PJPar(1, this);

                        (new santa._proc$syncronize$523628924(_pd$santa_elves_a6, _pd$santa_elves_b7) {
                            @Override
                            public void finalize() {
                                _ld$par2.decrement();
                            }
                        }).schedule();

                        if (_ld$par2.shouldYield()) {
                            this.runLabel = 34;
                            yield();
                            label(34);
                        }

                        for (_ld$i10 = 0;
                             _ld$i10 < G_ELVES;
                             _ld$i10++) {

                             if (!_pd$from_elf4.isReadyToRead(this)) {
                                 this.runLabel = 37;
                                 yield();
                             }

                             label(37);
                              // Do we have a rendezvous?
                             _ld$id5 = _pd$from_elf4.preReadRendezvous(this);
                             if (!_pd$report8.claimWrite(this)) {
                                 this.runLabel = 35;
                                 yield();
                             }
                             label(35);

                             _pd$report8.write(this, ((PJProtocolCase) (new Santa_msg.goodbye(_ld$id5))));
                             this.runLabel = 36;

                             yield();
                             label(36);

                             _pd$report8.unclaimWrite();

                             _pd$from_elf4.postReadRendezvous(this);
                             this.runLabel = 38;
                             yield();

                             label(38);
                        }
                        break;
                    default:
                        break;
                }
            }
            terminate();
        }
    }

    public static class _proc$main1169311 extends PJProcess {
        protected String[] _pd$args1;

        protected PJTimer _ld$tim1;
        protected long _ld$seed2;
        protected PJBarrier _ld$just_reindeer3;
        protected PJBarrier _ld$santa_reindeer4;
        protected PJChannel<Boolean> _ld$elves_a5;
        protected PJChannel<Boolean> _ld$elves_b6;
        protected PJChannel<Boolean> _ld$knock7;
        protected PJChannel<Boolean> _ld$santa_elves_a8;
        protected PJChannel<Boolean> _ld$santa_elves_b9;
        protected PJChannel<Integer> _ld$reindeer_santa10;
        protected PJChannel<Integer> _ld$elf_santa11;
        protected PJChannel<PJProtocolCase> _ld$report12;

        public _proc$main1169311(String[] _pd$args1) {
            this._pd$args1 = _pd$args1;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$seed2 = PJTimer.read();
            _ld$seed2 = (_ld$seed2 >> 2) + 42;
            _ld$just_reindeer3 = new PJBarrier();
            _ld$santa_reindeer4 = new PJBarrier();
            _ld$elves_a5 = new PJMany2OneChannel<Boolean>();
            _ld$elves_b6 = new PJMany2OneChannel<Boolean>();
            _ld$knock7 = new PJOne2OneChannel<Boolean>();
            _ld$santa_elves_a8 = new PJMany2OneChannel<Boolean>();
            _ld$santa_elves_b9 = new PJMany2OneChannel<Boolean>();
            _ld$reindeer_santa10 = new PJMany2OneChannel<Integer>();
            _ld$elf_santa11 = new PJMany2OneChannel<Integer>();
            _ld$report12 = new PJMany2OneChannel<PJProtocolCase>();
            io.println("SANTA OUTPUT       ELF OUTPUT      REINDEER OUTPUT");
            io.println("-----------------------------------------------------------------------------------");
            final PJPar _ld$par1 = new PJPar(5, this);

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    final PJPar _ld$par2 = new PJPar(2, this);
                    _ld$santa_reindeer4.enroll(2);

                    (new santa._proc$santa$1316171216(_ld$seed2 + (N_REINDEER + N_ELVES), _ld$knock7, _ld$reindeer_santa10, _ld$elf_santa11, _ld$santa_reindeer4, _ld$santa_elves_a8, _ld$santa_elves_b9, _ld$report12) {
                        @Override
                        public void finalize() {
                            _ld$par2.decrement();
                            _ld$santa_reindeer4.resign();
                        }
                    }).schedule();

                    new PJProcess() {
                        @Override
                        public synchronized void run() {
                            switch (this.runLabel) {
                                case 0: break;
                                case 1: resume(1); break;
                                default: break;
                            }

                            final PJPar _ld$par3 = new PJPar(3, this);
                            _ld$just_reindeer3.enroll(3);
                            _ld$santa_reindeer4.enroll(3);

                            (new santa._proc$reindeer$646748748(0, _ld$seed2, _ld$just_reindeer3, _ld$santa_reindeer4, _ld$reindeer_santa10, _ld$report12) {
                                @Override
                                public void finalize() {
                                    _ld$par3.decrement();
                                    _ld$just_reindeer3.resign();
                                    _ld$santa_reindeer4.resign();
                                }
                            }).schedule();

                            (new santa._proc$reindeer$646748748(1, _ld$seed2 + 1, _ld$just_reindeer3, _ld$santa_reindeer4, _ld$reindeer_santa10, _ld$report12) {
                                @Override
                                public void finalize() {
                                    _ld$par3.decrement();
                                    _ld$just_reindeer3.resign();
                                    _ld$santa_reindeer4.resign();
                                }
                            }).schedule();

                            (new santa._proc$reindeer$646748748(2, _ld$seed2 + 2, _ld$just_reindeer3, _ld$santa_reindeer4, _ld$reindeer_santa10, _ld$report12) {
                                @Override
                                public void finalize() {
                                    _ld$par3.decrement();
                                    _ld$just_reindeer3.resign();
                                    _ld$santa_reindeer4.resign();
                                }
                            }).schedule();

                            if (_ld$par3.shouldYield()) {
                                this.runLabel = 1;
                                yield();
                                label(1);
                            }

                            terminate();
                        }

                        @Override
                        public void finalize() {
                            _ld$par2.decrement();
                            _ld$santa_reindeer4.resign();
                        } 
                    }.schedule();

                    if (_ld$par2.shouldYield()) {
                        this.runLabel = 1;
                        yield();
                        label(1);
                    }

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                    _ld$santa_reindeer4.resign();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    final PJPar _ld$par4 = new PJPar(4, this);

                    (new santa._proc$elf$1975405111(0, N_REINDEER + _ld$seed2, _ld$elves_a5, _ld$elves_b6, _ld$santa_elves_a8, _ld$santa_elves_b9, _ld$elf_santa11, _ld$report12) {
                        @Override
                        public void finalize() {
                            _ld$par4.decrement();
                        }
                    }).schedule();

                    (new santa._proc$elf$1975405111(1, N_REINDEER + (_ld$seed2 + 1), _ld$elves_a5, _ld$elves_b6, _ld$santa_elves_a8, _ld$santa_elves_b9, _ld$elf_santa11, _ld$report12) {
                        @Override
                        public void finalize() {
                            _ld$par4.decrement();
                        }
                    }).schedule();

                    (new santa._proc$elf$1975405111(2, N_REINDEER + (_ld$seed2 + 2), _ld$elves_a5, _ld$elves_b6, _ld$santa_elves_a8, _ld$santa_elves_b9, _ld$elf_santa11, _ld$report12) {
                        @Override
                        public void finalize() {
                            _ld$par4.decrement();
                        }
                    }).schedule();

                    (new santa._proc$elf$1975405111(3, N_REINDEER + (_ld$seed2 + 3), _ld$elves_a5, _ld$elves_b6, _ld$santa_elves_a8, _ld$santa_elves_b9, _ld$elf_santa11, _ld$report12) {
                        @Override
                        public void finalize() {
                            _ld$par4.decrement();
                        }
                    }).schedule();

                    if (_ld$par4.shouldYield()) {
                        this.runLabel = 1;
                        yield();
                        label(1);
                    }

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                    _ld$santa_reindeer4.resign();
                } 
            }.schedule();

            (new santa._proc$display$502908242(_ld$report12) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                    _ld$santa_reindeer4.resign();
                }
            }).schedule();

            (new santa._proc$p_barrier_knock822005941(G_ELVES, _ld$elves_a5, _ld$elves_b6, _ld$knock7) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                    _ld$santa_reindeer4.resign();
                }
            }).schedule();

            (new santa._proc$p_barrier2048483955(G_ELVES + 1, _ld$santa_elves_a8, _ld$santa_elves_b9) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                    _ld$santa_reindeer4.resign();
                }
            }).schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            terminate();
        }
    }

    public static void main(String[] _pd$args1) {
    	Scheduler scheduler = new Scheduler();
        PJProcess.scheduler = scheduler;
        (new santa._proc$main1169311(_pd$args1)).schedule();
        PJProcess.scheduler.start();
    }
}