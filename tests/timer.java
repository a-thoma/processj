import java.util.*;
import processj.runtime.*;
import std.*;


/**
 * File generated by the ProcessJ JVM Compiler.
 * Package name 'tests'.
 * Code generation for 'timer.pj'.
 * Target class 'timer'.
 * Java code version '1.8.0_66'.
 *
 * @author ProcessJ Group - University of Nevada, Las Vegas
 * @since 1.2
 *
 */
public class timer {
    // Temporary dirty fix for unreachable code due to infinite loop
    public static boolean isTrue() { return true; }

    public static class _proc$main$arT extends PJProcess {
        protected String[] _pd$agrs1;

        protected PJTimer _ld$t1;
        protected long _ld$a2;

        public _proc$main$arT(String[] _pd$agrs1) {
            this._pd$agrs1 = _pd$agrs1;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$t1 = new PJTimer(this, 100);
            try {
                _ld$t1.start();
                setNotReady();
                this.runLabel = 1;
                yield();
            } catch (InterruptedException e) {
                System.out.println("An Interrupted exception occurred for a timer!");
            }
            label(1);

            _ld$a2 = PJTimer.read();
            io.println("> " + _ld$a2);
            terminate();
        }
    }

    public static void main(String[] _pd$agrs1) {
    	Scheduler scheduler = new Scheduler();
        PJProcess.scheduler = scheduler;
        (new timer._proc$main$arT(_pd$agrs1)).schedule();
        PJProcess.scheduler.start();
    }
}