import java.util.*;
import processj.runtime.*;
import std.*;


/**
 * File generated by the ProcessJ JVM Compiler.
 * Package name 'tests'.
 * Code generation for 'fullAdder.pj'.
 * Target class 'fullAdder'.
 * Java code version '1.8.0_66'.
 *
 * @author ProcessJ Group - University of Nevada, Las Vegas
 * @since 1.2
 *
 */
public class fullAdder {
    // Temporary dirty fix for unreachable code due to infinite loop
    public static boolean isTrue() { return true; }

    public static class _proc$main$arT extends PJProcess {
        protected String[] _pd$args1;

        protected PJChannel<Boolean> _ld$a01;
        protected PJChannel<Boolean> _ld$a12;
        protected PJChannel<Boolean> _ld$a23;
        protected PJChannel<Boolean> _ld$a34;
        protected PJChannel<Boolean> _ld$a45;
        protected PJChannel<Boolean> _ld$a56;
        protected PJChannel<Boolean> _ld$a67;
        protected PJChannel<Boolean> _ld$a78;
        protected PJChannel<Boolean> _ld$b09;
        protected PJChannel<Boolean> _ld$b110;
        protected PJChannel<Boolean> _ld$b211;
        protected PJChannel<Boolean> _ld$b312;
        protected PJChannel<Boolean> _ld$b413;
        protected PJChannel<Boolean> _ld$b514;
        protected PJChannel<Boolean> _ld$b615;
        protected PJChannel<Boolean> _ld$b716;
        protected PJChannel<Boolean> _ld$r017;
        protected PJChannel<Boolean> _ld$r118;
        protected PJChannel<Boolean> _ld$r219;
        protected PJChannel<Boolean> _ld$r320;
        protected PJChannel<Boolean> _ld$r421;
        protected PJChannel<Boolean> _ld$r522;
        protected PJChannel<Boolean> _ld$r623;
        protected PJChannel<Boolean> _ld$r724;
        protected PJChannel<Boolean> _ld$inCarry25;
        protected PJChannel<Boolean> _ld$outCarry26;
        protected boolean _ld$p027;
        protected boolean _ld$p128;
        protected boolean _ld$p229;
        protected boolean _ld$p330;
        protected boolean _ld$p431;
        protected boolean _ld$p532;
        protected boolean _ld$p633;
        protected boolean _ld$p734;
        protected boolean _ld$q035;
        protected boolean _ld$q136;
        protected boolean _ld$q237;
        protected boolean _ld$q338;
        protected boolean _ld$q439;
        protected boolean _ld$q540;
        protected boolean _ld$q641;
        protected boolean _ld$q742;
        protected boolean _ld$f043;
        protected boolean _ld$f144;
        protected boolean _ld$f245;
        protected boolean _ld$f346;
        protected boolean _ld$f447;
        protected boolean _ld$f548;
        protected boolean _ld$f649;
        protected boolean _ld$f750;
        protected boolean _ld$c51;
        protected boolean _ld$inC52;

        public _proc$main$arT(String[] _pd$args1) {
            this._pd$args1 = _pd$args1;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$a01 = new PJOne2OneChannel<Boolean>();
            _ld$a12 = new PJOne2OneChannel<Boolean>();
            _ld$a23 = new PJOne2OneChannel<Boolean>();
            _ld$a34 = new PJOne2OneChannel<Boolean>();
            _ld$a45 = new PJOne2OneChannel<Boolean>();
            _ld$a56 = new PJOne2OneChannel<Boolean>();
            _ld$a67 = new PJOne2OneChannel<Boolean>();
            _ld$a78 = new PJOne2OneChannel<Boolean>();
            _ld$b09 = new PJOne2OneChannel<Boolean>();
            _ld$b110 = new PJOne2OneChannel<Boolean>();
            _ld$b211 = new PJOne2OneChannel<Boolean>();
            _ld$b312 = new PJOne2OneChannel<Boolean>();
            _ld$b413 = new PJOne2OneChannel<Boolean>();
            _ld$b514 = new PJOne2OneChannel<Boolean>();
            _ld$b615 = new PJOne2OneChannel<Boolean>();
            _ld$b716 = new PJOne2OneChannel<Boolean>();
            _ld$r017 = new PJOne2OneChannel<Boolean>();
            _ld$r118 = new PJOne2OneChannel<Boolean>();
            _ld$r219 = new PJOne2OneChannel<Boolean>();
            _ld$r320 = new PJOne2OneChannel<Boolean>();
            _ld$r421 = new PJOne2OneChannel<Boolean>();
            _ld$r522 = new PJOne2OneChannel<Boolean>();
            _ld$r623 = new PJOne2OneChannel<Boolean>();
            _ld$r724 = new PJOne2OneChannel<Boolean>();
            _ld$inCarry25 = new PJOne2OneChannel<Boolean>();
            _ld$outCarry26 = new PJOne2OneChannel<Boolean>();


























            _ld$p027 = false;
            _ld$p128 = false;
            _ld$p229 = true;
            _ld$p330 = false;
            _ld$p431 = false;
            _ld$p532 = false;
            _ld$p633 = true;
            _ld$p734 = false;
            _ld$q035 = true;
            _ld$q136 = true;
            _ld$q237 = false;
            _ld$q338 = true;
            _ld$q439 = false;
            _ld$q540 = true;
            _ld$q641 = false;
            _ld$q742 = true;
            final PJPar _ld$par1 = new PJPar(27, this);

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a78.write(this, _ld$p734);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a67.write(this, _ld$p633);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a56.write(this, _ld$p532);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a45.write(this, _ld$p431);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a34.write(this, _ld$p330);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a23.write(this, _ld$p229);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a12.write(this, _ld$p128);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$a01.write(this, _ld$p027);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b716.write(this, _ld$q742);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b615.write(this, _ld$q641);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b514.write(this, _ld$q540);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b413.write(this, _ld$q439);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b312.write(this, _ld$q338);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b211.write(this, _ld$q237);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b110.write(this, _ld$q136);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$b09.write(this, _ld$q035);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _ld$inCarry25.write(this, _ld$inC52);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            (new fullAdder._proc$eightBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ(_ld$a01, _ld$a12, _ld$a23, _ld$a34, _ld$a45, _ld$a56, _ld$a67, _ld$a78, _ld$b09, _ld$b110, _ld$b211, _ld$b312, _ld$b413, _ld$b514, _ld$b615, _ld$b716, _ld$inCarry25, _ld$r017, _ld$r118, _ld$r219, _ld$r320, _ld$r421, _ld$r522, _ld$r623, _ld$r724, _ld$outCarry26) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r017.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f043 = _ld$r017.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r118.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f144 = _ld$r118.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r219.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f245 = _ld$r219.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r320.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f346 = _ld$r320.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r421.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f447 = _ld$r421.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r522.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f548 = _ld$r522.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r623.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f649 = _ld$r623.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$r724.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$f750 = _ld$r724.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_ld$outCarry26.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$c51 = _ld$outCarry26.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            io.println("  " + _ld$p734 + " " + _ld$p633 + " " + _ld$p532 + " " + _ld$p431 + " " + _ld$p330 + " " + _ld$p229 + " " + _ld$p128 + " " + _ld$p027 + " (InCarry:" + _ld$inC52 + ")");
            io.println("+ " + _ld$q742 + " " + _ld$q641 + " " + _ld$q540 + " " + _ld$q439 + " " + _ld$q338 + " " + _ld$q237 + " " + _ld$q136 + " " + _ld$q035);
            io.println("----------");
            io.println(" " + _ld$f750 + " " + _ld$f649 + " " + _ld$f548 + " " + _ld$f447 + " " + _ld$f346 + " " + _ld$f245 + " " + _ld$f144 + " " + _ld$f043);
            io.println("Carry was: " + _ld$c51);
            terminate();
        }
    }

    public static void main(String[] _pd$args1) {
    	Scheduler scheduler = new Scheduler();
        PJProcess.scheduler = scheduler;
        (new fullAdder._proc$main$arT(_pd$args1)).schedule();
        PJProcess.scheduler.start();
    }

    public static class _proc$notGate$crZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in1;
        protected PJChannel<Boolean> _pd$out2;

        protected boolean _ld$x1;

        public _proc$notGate$crZ$cwZ(PJChannel<Boolean> _pd$in1, PJChannel<Boolean> _pd$out2) {
            this._pd$in1 = _pd$in1;
            this._pd$out2 = _pd$out2;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                default: break;
            }

            _ld$x1 = false;
            if (!_pd$in1.isReadyToRead(this)) {
                this.runLabel = 1;
                yield();
            }

            label(1);
            _ld$x1 = _pd$in1.read(this);
            this.runLabel = 2;
            yield();

            label(2);
            _pd$out2.write(this, !_ld$x1);
            this.runLabel = 3;
            yield();
            label(3);

            terminate();
        }
    }

    public static class _proc$orGate$crZ$crZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in11;
        protected PJChannel<Boolean> _pd$in22;
        protected PJChannel<Boolean> _pd$out3;

        protected boolean _ld$x1;
        protected boolean _ld$y2;

        public _proc$orGate$crZ$crZ$cwZ(PJChannel<Boolean> _pd$in11, PJChannel<Boolean> _pd$in22, PJChannel<Boolean> _pd$out3) {
            this._pd$in11 = _pd$in11;
            this._pd$in22 = _pd$in22;
            this._pd$out3 = _pd$out3;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                default: break;
            }

            _ld$x1 = false;
            _ld$y2 = false;
            final PJPar _ld$par1 = new PJPar(2, this);

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_pd$in11.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$x1 = _pd$in11.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_pd$in22.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$y2 = _pd$in22.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            _pd$out3.write(this, _ld$x1 || _ld$y2);
            this.runLabel = 2;
            yield();
            label(2);

            terminate();
        }
    }

    public static class _proc$andGate$crZ$crZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in11;
        protected PJChannel<Boolean> _pd$in22;
        protected PJChannel<Boolean> _pd$out3;

        protected boolean _ld$x1;
        protected boolean _ld$y2;

        public _proc$andGate$crZ$crZ$cwZ(PJChannel<Boolean> _pd$in11, PJChannel<Boolean> _pd$in22, PJChannel<Boolean> _pd$out3) {
            this._pd$in11 = _pd$in11;
            this._pd$in22 = _pd$in22;
            this._pd$out3 = _pd$out3;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                default: break;
            }

            _ld$x1 = false;
            _ld$y2 = false;
            final PJPar _ld$par1 = new PJPar(2, this);

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_pd$in11.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$x1 = _pd$in11.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        case 2: resume(2); break;
                        default: break;
                    }

                    if (!_pd$in22.isReadyToRead(this)) {
                        this.runLabel = 1;
                        yield();
                    }

                    label(1);
                    _ld$y2 = _pd$in22.read(this);
                    this.runLabel = 2;
                    yield();

                    label(2);
                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            _pd$out3.write(this, _ld$x1 && _ld$y2);
            this.runLabel = 2;
            yield();
            label(2);

            terminate();
        }
    }

    public static class _proc$nandGate$crZ$crZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in11;
        protected PJChannel<Boolean> _pd$in22;
        protected PJChannel<Boolean> _pd$out3;

        protected PJChannel<Boolean> _ld$a1;

        public _proc$nandGate$crZ$crZ$cwZ(PJChannel<Boolean> _pd$in11, PJChannel<Boolean> _pd$in22, PJChannel<Boolean> _pd$out3) {
            this._pd$in11 = _pd$in11;
            this._pd$in22 = _pd$in22;
            this._pd$out3 = _pd$out3;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$a1 = new PJOne2OneChannel<Boolean>();
            final PJPar _ld$par1 = new PJPar(2, this);

            (new fullAdder._proc$andGate$crZ$crZ$cwZ(_pd$in11, _pd$in22, _ld$a1) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$notGate$crZ$cwZ(_ld$a1, _pd$out3) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            terminate();
        }
    }

    public static class _proc$muxGate$crZ$crZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in1;
        protected PJChannel<Boolean> _pd$out12;
        protected PJChannel<Boolean> _pd$out23;

        protected boolean _ld$x1;

        public _proc$muxGate$crZ$crZ$cwZ(PJChannel<Boolean> _pd$in1, PJChannel<Boolean> _pd$out12, PJChannel<Boolean> _pd$out23) {
            this._pd$in1 = _pd$in1;
            this._pd$out12 = _pd$out12;
            this._pd$out23 = _pd$out23;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                case 2: resume(2); break;
                case 3: resume(3); break;
                default: break;
            }

            _ld$x1 = false;
            if (!_pd$in1.isReadyToRead(this)) {
                this.runLabel = 1;
                yield();
            }

            label(1);
            _ld$x1 = _pd$in1.read(this);
            this.runLabel = 2;
            yield();

            label(2);
            final PJPar _ld$par1 = new PJPar(2, this);

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _pd$out12.write(this, _ld$x1);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            new PJProcess() {
                @Override
                public synchronized void run() {
                    switch (this.runLabel) {
                        case 0: break;
                        case 1: resume(1); break;
                        default: break;
                    }

                    _pd$out23.write(this, _ld$x1);
                    this.runLabel = 1;
                    yield();
                    label(1);

                    terminate();
                }

                @Override
                public void finalize() {
                    _ld$par1.decrement();
                } 
            }.schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 3;
                yield();
                label(3);
            }

            terminate();
        }
    }

    public static class _proc$xorGate$crZ$crZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in11;
        protected PJChannel<Boolean> _pd$in22;
        protected PJChannel<Boolean> _pd$out3;

        protected PJChannel<Boolean> _ld$a1;
        protected PJChannel<Boolean> _ld$b2;
        protected PJChannel<Boolean> _ld$c3;
        protected PJChannel<Boolean> _ld$d4;
        protected PJChannel<Boolean> _ld$e5;
        protected PJChannel<Boolean> _ld$f6;
        protected PJChannel<Boolean> _ld$g7;
        protected PJChannel<Boolean> _ld$h8;
        protected PJChannel<Boolean> _ld$i9;

        public _proc$xorGate$crZ$crZ$cwZ(PJChannel<Boolean> _pd$in11, PJChannel<Boolean> _pd$in22, PJChannel<Boolean> _pd$out3) {
            this._pd$in11 = _pd$in11;
            this._pd$in22 = _pd$in22;
            this._pd$out3 = _pd$out3;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$a1 = new PJOne2OneChannel<Boolean>();
            _ld$b2 = new PJOne2OneChannel<Boolean>();
            _ld$c3 = new PJOne2OneChannel<Boolean>();
            _ld$d4 = new PJOne2OneChannel<Boolean>();
            _ld$e5 = new PJOne2OneChannel<Boolean>();
            _ld$f6 = new PJOne2OneChannel<Boolean>();
            _ld$g7 = new PJOne2OneChannel<Boolean>();
            _ld$h8 = new PJOne2OneChannel<Boolean>();
            _ld$i9 = new PJOne2OneChannel<Boolean>();
            final PJPar _ld$par1 = new PJPar(7, this);

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_pd$in11, _ld$a1, _ld$b2) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_pd$in22, _ld$c3, _ld$d4) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$nandGate$crZ$crZ$cwZ(_ld$b2, _ld$d4, _ld$e5) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_ld$e5, _ld$f6, _ld$g7) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$nandGate$crZ$crZ$cwZ(_ld$a1, _ld$f6, _ld$h8) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$nandGate$crZ$crZ$cwZ(_ld$c3, _ld$g7, _ld$i9) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$nandGate$crZ$crZ$cwZ(_ld$h8, _ld$i9, _pd$out3) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            terminate();
        }
    }

    public static class _proc$oneBitAdder$crZ$crZ$crZ$cwZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$in11;
        protected PJChannel<Boolean> _pd$in22;
        protected PJChannel<Boolean> _pd$in33;
        protected PJChannel<Boolean> _pd$result4;
        protected PJChannel<Boolean> _pd$carry5;

        protected PJChannel<Boolean> _ld$a1;
        protected PJChannel<Boolean> _ld$b2;
        protected PJChannel<Boolean> _ld$c3;
        protected PJChannel<Boolean> _ld$d4;
        protected PJChannel<Boolean> _ld$e5;
        protected PJChannel<Boolean> _ld$f6;
        protected PJChannel<Boolean> _ld$g7;
        protected PJChannel<Boolean> _ld$h8;
        protected PJChannel<Boolean> _ld$i9;
        protected PJChannel<Boolean> _ld$j10;
        protected PJChannel<Boolean> _ld$k11;

        public _proc$oneBitAdder$crZ$crZ$crZ$cwZ$cwZ(PJChannel<Boolean> _pd$in11, PJChannel<Boolean> _pd$in22, PJChannel<Boolean> _pd$in33, PJChannel<Boolean> _pd$result4, PJChannel<Boolean> _pd$carry5) {
            this._pd$in11 = _pd$in11;
            this._pd$in22 = _pd$in22;
            this._pd$in33 = _pd$in33;
            this._pd$result4 = _pd$result4;
            this._pd$carry5 = _pd$carry5;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$a1 = new PJOne2OneChannel<Boolean>();
            _ld$b2 = new PJOne2OneChannel<Boolean>();
            _ld$c3 = new PJOne2OneChannel<Boolean>();
            _ld$d4 = new PJOne2OneChannel<Boolean>();
            _ld$e5 = new PJOne2OneChannel<Boolean>();
            _ld$f6 = new PJOne2OneChannel<Boolean>();
            _ld$g7 = new PJOne2OneChannel<Boolean>();
            _ld$h8 = new PJOne2OneChannel<Boolean>();
            _ld$i9 = new PJOne2OneChannel<Boolean>();
            _ld$j10 = new PJOne2OneChannel<Boolean>();
            _ld$k11 = new PJOne2OneChannel<Boolean>();
            final PJPar _ld$par1 = new PJPar(9, this);

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_pd$in11, _ld$a1, _ld$b2) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_pd$in22, _ld$c3, _ld$d4) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$xorGate$crZ$crZ$cwZ(_ld$a1, _ld$c3, _ld$e5) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_ld$e5, _ld$f6, _ld$g7) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$muxGate$crZ$crZ$cwZ(_pd$in33, _ld$h8, _ld$i9) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$xorGate$crZ$crZ$cwZ(_ld$f6, _ld$h8, _pd$result4) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$andGate$crZ$crZ$cwZ(_ld$g7, _ld$i9, _ld$j10) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$andGate$crZ$crZ$cwZ(_ld$b2, _ld$d4, _ld$k11) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$orGate$crZ$crZ$cwZ(_ld$j10, _ld$k11, _pd$carry5) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            terminate();
        }
    }

    public static class _proc$fourBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$inA01;
        protected PJChannel<Boolean> _pd$inA12;
        protected PJChannel<Boolean> _pd$inA23;
        protected PJChannel<Boolean> _pd$inA34;
        protected PJChannel<Boolean> _pd$inB05;
        protected PJChannel<Boolean> _pd$inB16;
        protected PJChannel<Boolean> _pd$inB27;
        protected PJChannel<Boolean> _pd$inB38;
        protected PJChannel<Boolean> _pd$inCarry9;
        protected PJChannel<Boolean> _pd$result010;
        protected PJChannel<Boolean> _pd$result111;
        protected PJChannel<Boolean> _pd$result212;
        protected PJChannel<Boolean> _pd$result313;
        protected PJChannel<Boolean> _pd$carry14;

        protected PJChannel<Boolean> _ld$a1;
        protected PJChannel<Boolean> _ld$b2;
        protected PJChannel<Boolean> _ld$c3;

        public _proc$fourBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ(PJChannel<Boolean> _pd$inA01, PJChannel<Boolean> _pd$inA12, PJChannel<Boolean> _pd$inA23, PJChannel<Boolean> _pd$inA34, PJChannel<Boolean> _pd$inB05, PJChannel<Boolean> _pd$inB16, PJChannel<Boolean> _pd$inB27, PJChannel<Boolean> _pd$inB38, PJChannel<Boolean> _pd$inCarry9, PJChannel<Boolean> _pd$result010, PJChannel<Boolean> _pd$result111, PJChannel<Boolean> _pd$result212, PJChannel<Boolean> _pd$result313, PJChannel<Boolean> _pd$carry14) {
            this._pd$inA01 = _pd$inA01;
            this._pd$inA12 = _pd$inA12;
            this._pd$inA23 = _pd$inA23;
            this._pd$inA34 = _pd$inA34;
            this._pd$inB05 = _pd$inB05;
            this._pd$inB16 = _pd$inB16;
            this._pd$inB27 = _pd$inB27;
            this._pd$inB38 = _pd$inB38;
            this._pd$inCarry9 = _pd$inCarry9;
            this._pd$result010 = _pd$result010;
            this._pd$result111 = _pd$result111;
            this._pd$result212 = _pd$result212;
            this._pd$result313 = _pd$result313;
            this._pd$carry14 = _pd$carry14;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$a1 = new PJOne2OneChannel<Boolean>();
            _ld$b2 = new PJOne2OneChannel<Boolean>();
            _ld$c3 = new PJOne2OneChannel<Boolean>();
            final PJPar _ld$par1 = new PJPar(4, this);

            (new fullAdder._proc$oneBitAdder$crZ$crZ$crZ$cwZ$cwZ(_pd$inA01, _pd$inB05, _pd$inCarry9, _pd$result010, _ld$a1) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$oneBitAdder$crZ$crZ$crZ$cwZ$cwZ(_pd$inA12, _pd$inB16, _ld$a1, _pd$result111, _ld$b2) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$oneBitAdder$crZ$crZ$crZ$cwZ$cwZ(_pd$inA23, _pd$inB27, _ld$b2, _pd$result212, _ld$c3) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$oneBitAdder$crZ$crZ$crZ$cwZ$cwZ(_pd$inA34, _pd$inB38, _ld$c3, _pd$result313, _pd$carry14) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            terminate();
        }
    }

    public static class _proc$eightBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ extends PJProcess {
        protected PJChannel<Boolean> _pd$inA01;
        protected PJChannel<Boolean> _pd$inA12;
        protected PJChannel<Boolean> _pd$inA23;
        protected PJChannel<Boolean> _pd$inA34;
        protected PJChannel<Boolean> _pd$inA45;
        protected PJChannel<Boolean> _pd$inA56;
        protected PJChannel<Boolean> _pd$inA67;
        protected PJChannel<Boolean> _pd$inA78;
        protected PJChannel<Boolean> _pd$inB09;
        protected PJChannel<Boolean> _pd$inB110;
        protected PJChannel<Boolean> _pd$inB211;
        protected PJChannel<Boolean> _pd$inB312;
        protected PJChannel<Boolean> _pd$inB413;
        protected PJChannel<Boolean> _pd$inB514;
        protected PJChannel<Boolean> _pd$inB615;
        protected PJChannel<Boolean> _pd$inB716;
        protected PJChannel<Boolean> _pd$inCarry17;
        protected PJChannel<Boolean> _pd$result018;
        protected PJChannel<Boolean> _pd$result119;
        protected PJChannel<Boolean> _pd$result220;
        protected PJChannel<Boolean> _pd$result321;
        protected PJChannel<Boolean> _pd$result422;
        protected PJChannel<Boolean> _pd$result523;
        protected PJChannel<Boolean> _pd$result624;
        protected PJChannel<Boolean> _pd$result725;
        protected PJChannel<Boolean> _pd$outCarry26;

        protected PJChannel<Boolean> _ld$a1;

        public _proc$eightBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ$cwZ(PJChannel<Boolean> _pd$inA01, PJChannel<Boolean> _pd$inA12, PJChannel<Boolean> _pd$inA23, PJChannel<Boolean> _pd$inA34, PJChannel<Boolean> _pd$inA45, PJChannel<Boolean> _pd$inA56, PJChannel<Boolean> _pd$inA67, PJChannel<Boolean> _pd$inA78, PJChannel<Boolean> _pd$inB09, PJChannel<Boolean> _pd$inB110, PJChannel<Boolean> _pd$inB211, PJChannel<Boolean> _pd$inB312, PJChannel<Boolean> _pd$inB413, PJChannel<Boolean> _pd$inB514, PJChannel<Boolean> _pd$inB615, PJChannel<Boolean> _pd$inB716, PJChannel<Boolean> _pd$inCarry17, PJChannel<Boolean> _pd$result018, PJChannel<Boolean> _pd$result119, PJChannel<Boolean> _pd$result220, PJChannel<Boolean> _pd$result321, PJChannel<Boolean> _pd$result422, PJChannel<Boolean> _pd$result523, PJChannel<Boolean> _pd$result624, PJChannel<Boolean> _pd$result725, PJChannel<Boolean> _pd$outCarry26) {
            this._pd$inA01 = _pd$inA01;
            this._pd$inA12 = _pd$inA12;
            this._pd$inA23 = _pd$inA23;
            this._pd$inA34 = _pd$inA34;
            this._pd$inA45 = _pd$inA45;
            this._pd$inA56 = _pd$inA56;
            this._pd$inA67 = _pd$inA67;
            this._pd$inA78 = _pd$inA78;
            this._pd$inB09 = _pd$inB09;
            this._pd$inB110 = _pd$inB110;
            this._pd$inB211 = _pd$inB211;
            this._pd$inB312 = _pd$inB312;
            this._pd$inB413 = _pd$inB413;
            this._pd$inB514 = _pd$inB514;
            this._pd$inB615 = _pd$inB615;
            this._pd$inB716 = _pd$inB716;
            this._pd$inCarry17 = _pd$inCarry17;
            this._pd$result018 = _pd$result018;
            this._pd$result119 = _pd$result119;
            this._pd$result220 = _pd$result220;
            this._pd$result321 = _pd$result321;
            this._pd$result422 = _pd$result422;
            this._pd$result523 = _pd$result523;
            this._pd$result624 = _pd$result624;
            this._pd$result725 = _pd$result725;
            this._pd$outCarry26 = _pd$outCarry26;
        }

        @Override
        public synchronized void run() {
            switch (this.runLabel) {
                case 0: break;
                case 1: resume(1); break;
                default: break;
            }

            _ld$a1 = new PJOne2OneChannel<Boolean>();
            final PJPar _ld$par1 = new PJPar(2, this);

            (new fullAdder._proc$fourBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ(_pd$inA01, _pd$inA12, _pd$inA23, _pd$inA34, _pd$inB09, _pd$inB110, _pd$inB211, _pd$inB312, _pd$inCarry17, _pd$result018, _pd$result119, _pd$result220, _pd$result321, _ld$a1) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            (new fullAdder._proc$fourBitAdder$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$crZ$cwZ$cwZ$cwZ$cwZ$cwZ(_pd$inA45, _pd$inA56, _pd$inA67, _pd$inA78, _pd$inB413, _pd$inB514, _pd$inB615, _pd$inB716, _ld$a1, _pd$result422, _pd$result523, _pd$result624, _pd$result725, _pd$outCarry26) {
                @Override
                public void finalize() {
                    _ld$par1.decrement();
                }
            }).schedule();

            if (_ld$par1.shouldYield()) {
                this.runLabel = 1;
                yield();
                label(1);
            }

            terminate();
        }
    }
}