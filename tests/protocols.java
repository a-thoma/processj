import java.util.*;
import processj.runtime.*;

/**
 * File generated by the ProcessJ JVM Compiler.
 * Package name 'tests'.
 * Code generation for 'protocols.pj'.
 * Target class 'protocols'.
 * Java code version '1.8.0_66'.
 *
 * @author ProcessJ Group - University of Nevada, Las Vegas
 * @since 1.2
 *
 */
public class protocols {
    // Temporary dirty fix for unreachable code due to infinite loop
    public static boolean isTrue() { return true; }

    public static class P {
        protected static class request extends PJProtocolCase {
            public int number;
            public double amount;

            public request(int number, double amount) {
                this.number = number;
                this.amount = amount;
                this.tag = "request";
            }
        }

        protected static class reply extends PJProtocolCase {
            public boolean status;

            public reply(boolean status) {
                this.status = status;
                this.tag = "reply";
            }
        }
    }

    public static class P1 {
        protected static class deny extends PJProtocolCase {
            public int code;

            public deny(int code) {
                this.code = code;
                this.tag = "deny";
            }
        }
    }

    public static class _proc$main$arT extends PJProcess {
        protected String[] _pd$args1;

        protected PJProtocolCase _ld$p1;

        public _proc$main$arT(String[] _pd$args1) {
            this._pd$args1 = _pd$args1;
        }

        @Override
        public synchronized void run() {
            _ld$p1 = new P1.deny(4);
            terminate();
        }
    }

    public static void main(String[] _pd$args1) {
    	Scheduler scheduler = new Scheduler();
        PJProcess.scheduler = scheduler;
        (new protocols._proc$main$arT(_pd$args1)).schedule();
        PJProcess.scheduler.start();
    }
}